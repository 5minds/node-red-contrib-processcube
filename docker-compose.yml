services:
  node-red:
    image: 5minds/node-red:node-red-contrib-processcube-4
    build:
      context: .
    ports:
      # node-red port
      - 1880:1880
      # debugger port
      - 9229:9229
    environment:
      - TZ=Europe/Berlin
      - ENGINE_URL=http://engine:8000
      - TOPIC=TopicFromENV
      # start node-red with debugger port open
      - NODE_OPTIONS=--inspect=0.0.0.0:9229
      - NODE_RED_ETW_HEARTBEAT_LOGGING=false
      - NODE_RED_ETW_STEP_LOGGING=true
      - NODE_RED_ETW_STOP_IF_FAILED=true
    volumes:
      # required for mapping the current source into the directory
      - ./.:/package_src/
      # save the flows
      - ./.processcube/nodered:/data
    depends_on:
      - engine
      - authority
  
  engine:
    image: 5minds/processcube_engine:2024-1
    #image: 5minds/processcube_engine:17.1.2
    ports:
      - 8000:8000
    volumes:
      - ./.processcube/engine/config/config.json:/etc/engine/config/config.json:ro
      - ./processes:/processes:ro
    environment:
      CONFIG_PATH: /etc/engine/config/config.json
      application__name: Engine for Node-RED contrib
      iam__baseUrl: http://authority:11560
      iam__allowAnonymousRootAccess: true
    command: --seed-dir=/processes --port 8000
    depends_on:
      - authority
    healthcheck:
      test: bash -c "[ -f /tmp/healthy ]"
      timeout: 1s
      retries: 20      

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: enginedb
      PGDATA: /data/postgres/db
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./postgres/db.instance:/data/postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      retries: 10
      timeout: 10s
    restart: unless-stopped


  authority:
    image: 5minds/processcube_authority:3.0.4
    ports:
      - 11560:11560
    volumes:
      - ./.processcube/authority/config:/etc/authority/config:ro
      - ./.processcube/authority/db:/app/authority/storage/
    environment:
      UPE_SEED_PATH: /etc/authority/config/upeSeedingData.json
